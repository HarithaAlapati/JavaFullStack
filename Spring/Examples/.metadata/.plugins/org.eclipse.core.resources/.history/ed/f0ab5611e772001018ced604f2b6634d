package com.haritha.bootjpa.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.haritha.bootjpa.dao.AlienRepo;
import com.haritha.bootjpa.model.Alien;
import com.haritha.bootjpa.model.*;

@Controller
public class AlienController {
	
	private static final Object alien = null;
	@Autowired
	AlienRepo repo;
	
	@RequestMapping("/home")
	public String home() {
		return "home";
	}
	
	// For adding into h2
	@RequestMapping("/addAlien")
	public String addAlien(Alien alien){
		
		repo.save(alien);
		System.out.println("added");
		return "home";
	} 
	
	// fetching data
	/*@RequestMapping("/getAlien")
	 public ModelAndView addAlien(@RequestParam int aid){
		
		ModelAndView mv = new ModelAndView("showAlien");
		Alien alien = repo.findById(aid).orElse(new Alien());
		mv.addObject("alien", alien);
		return mv;
	}*/
	

	/*@RequestMapping("/getAlien")
	 public ModelAndView addAlien(@RequestParam int aid){
		
		ModelAndView mv = new ModelAndView("showAlien");
		Alien alien = repo.findById(aid).orElse(new Alien());
		// Get the data where the user tech is java		
		 System.out.println(repo.findByTech("java"));
		// Get the data where the user id is greater than 102
		 System.out.println(repo.findByAidGreaterThan(102));
		// Get the data in sorted order
		  System.out.println(repo.findByTechSorted("java"));
		mv.addObject(alien);
		return mv;
	}*/
	// -------------------------------REST-------------------------
	@RequestMapping(path="/aliens", produces= {"application.xml"})
	@ResponseBody
	public List<Alien> getAliens() {
		
		return (List<Alien>) repo.findAll();
	}
	
	@RequestMapping("/alien/{aid}")
	@ResponseBody // we are saying return type is data not view
	public String getAlien(@PathVariable("aid") int aid) {
		return repo.findById(aid).toString(); // converting into string
	}
	
	
	

}
